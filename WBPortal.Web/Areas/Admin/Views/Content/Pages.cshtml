@using WBSSLStore.Web.Util;
@using WBSSLStore.Domain
@using WBSSLStore.Data.Infrastructure;
@model Pages
@{
    ViewBag.version = WBSSLStore.Web.Helpers.Caching.SiteCacher.ResourceVersion();
    WBSiteSettings setting = new WBSiteSettings(WBSSLStore.Web.Helpers.Caching.SiteCacher.CurrentSite);
    ViewBag.Title = "Add/Edit Page";
}

@System.Web.Optimization.Styles.Render("/bundales/jquery-ui-css?v=" + ViewBag.version)

@System.Web.Optimization.Scripts.Render("/bundales/wb/scripts?v=" + ViewBag.version)
@System.Web.Optimization.Scripts.Render("/bundales/wb/jquery.unobtrusive.validate-js?v=" + ViewBag.version)
@System.Web.Optimization.Scripts.Render("/bundales/jquery-glob?v=" + ViewBag.version)

@*<script src="@Url.Content("~/content/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/content/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/content/Scripts/jQuery.glob.min.js")" type="text/javascript"></script>*@
@*<link rel="stylesheet" href="@Url.Content("~/content/themes/base/jquery-ui.min.css")" type="text/css" />
<script src="@Url.Content("~/Content/Scripts/Jquery.UI/jquery-ui.min.js")"  type="text/javascript"></script>*@

@if (setting.CurrentLangCode != "en")
{
    @System.Web.Optimization.Scripts.Render("/bundales/jquery-datepickerjs?v=" + ViewBag.version)
    @System.Web.Optimization.Scripts.Render("/bundales/jquery-glob-all?v=" + ViewBag.version)
    @*<script src="@Url.Content("~/content/Scripts/i18n/jquery.ui.datepicker-" + setting.CurrentLangCode + ".js")" type="text/javascript"></script>
    <script src="@Url.Content("~/content/Scripts/jquery.glob.all.min.js")" type="text/javascript"></script>*@
}
<script type="text/javascript" language="javascript">
    $(function () {
        var objParentID = '@(Model != null && Model.ID > 0 ? Model.ParentID : 0)';
        $('ddlParentID option[value=' + objParentID + ']').attr('selected', 'selected');

        $.preferCulture('@(setting.CurrentLangCode)');

        var dates = $("#StartDate, #EndDate").datepicker({
            changeMonth: true,
            changeYear:true,
            numberOfMonths: 1,
            showOn: "both",
            buttonImage: "@WBSSLStore.Web.Util.WBSiteSettings.AdminImagePath/icon-date.gif",
            buttonImageOnly: true,
            onSelect: function (selectedDate) {
                var option = this.id == "StartDate" ? "minDate" : "maxDate",
					instance = $(this).data("datepicker"),
					date = $.datepicker.parseDate(
						instance.settings.dateFormat ||
						$.datepicker._defaults.dateFormat,
						selectedDate, instance.settings);
                dates.not(this).datepicker("option", option, date);
            }
        });

        $('#ddlParentID').change(function () {

            if (objParentID == 0) {
                var objValue = $('#ddlParentID').val().split('|');
                var objParentURL;
                if (objValue && objValue.length > 1)
                    objParentURL = objValue[1];
                else
                    objParentURL = '';

                $('#slug').val(objParentURL + '/' + $('#Caption').val().replace(/ /g, '-'));
                if ($(this).val() == '')
                    $('#slug').val('');
            }
        });

        $('#Caption').keyup(function () {
            if (objParentID == 0) {
                var objValue = $('#ddlParentID').val().split('|');
                var objParentURL;
                if (objValue && objValue.length > 1)
                    objParentURL = objValue[1];
                else
                    objParentURL = '';
                $('#slug').val(objParentURL + '/' + $('#Caption').val().replace(/ /g, '-').replace(/[|#|$|%|^|&|*|'|.|?|=|!|@@|%|^|(|)|~|||`|,|<|>|;|:|"]+/g, ''));
                if ($(this).val() == '')
                    $('#slug').val('');
            }
        });

        //        $('#DisplayOrder').val('0');
        //        $('#DisplayOrder').blur(function () {
        //            var objValue = $(this).val();
        //            if (objValue == '')
        //                $(this).val('0');
        //            else if (isNaN(objValue)) {
        //                $('#pLoaderImg').html('Please enter valid Display Order');
        //                $('#btnSubmit').attr("disabled", true);
        //            }
        //            else {
        //                $(this).val(parseFloat($(this).val()).toFixed(2));
        //                $('#pLoaderImg').html('');
        //                $('#btnSubmit').removeAttr("disabled");
        //            }
        //        });
    });
</script>
<tr>
    <td align="left" valign="top">
        <table width="881" border="0" align="left" cellpadding="0" cellspacing="0">
            <tr>
                <td width="7" align="left" valign="top">
                    <img src="@WBSSLStore.Web.Util.WBSiteSettings.AdminImagePath/barleft.gif" alt="whitebrand" width="7" height="55" />
                </td>
                <td width="866" align="left" valign="middle" class="hdbarbg">
                    <table width="840" border="0" align="center" cellpadding="1" cellspacing="1">
                        <tr>
                            <td width="407" align="left" valign="middle" class="head1">
                                @if (Model != null && Model.ID > 0)
                                {
                                    <span>@WBSSLStore.Resources.GeneralMessage.Message.EditPage_Caption</span>
                                    @Html.HiddenFor(model => model.DisplayOrder)
                                }
                                else
                                { 
                                    <span>@WBSSLStore.Resources.GeneralMessage.Message.AddPage_Caption</span>
                                }
                            </td>
                        </tr>
                    </table>
                </td>
                <td width="9" align="right" valign="top">
                    <img src="@WBSSLStore.Web.Util.WBSiteSettings.AdminImagePath/barright.gif" alt="whitebrand" width="9" height="55" />
                </td>
            </tr>
        </table>
    </td>
</tr>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <tr>
        <td align="left" valign="top" class="contbg">
            <table width="870" border="0" align="center" cellpadding="0" cellspacing="7">
                <tr>
                    <td width="867" align="center" valign="top" class="bgclr">
                        <table width="100%" border="0" cellspacing="2" cellpadding="2">
                            <tr>
                                <td height="30" align="right" valign="middle" class="bluefont" colspan="2">
                                    @Html.ActionLink(@WBSSLStore.Resources.GeneralMessage.Message.BacktoStore_Content_Caption, "Index")
                                </td>
                            </tr>
                            <tr>
                                <td height="22" align="right" valign="middle" class="bold">
                                    @Html.LabelFor(model => model.ParentID):
                                </td>
                                <td height="22" align="left" valign="middle" class="bold">
                                    @*@Html.DropDownList("ParentID", "---Root---")*@
                                    @Html.DropDownList("ddlParentID", ViewBag.ParentID as IEnumerable<SelectListItem>, "------ROOT------", new { @class = "inputboxbigger" })
                                </td>
                            </tr>
                            <tr>
                                <td height="22" align="right" valign="middle" class="bold">
                                    @Html.LabelFor(model => model.Caption):<span class="redfont"> *</span>
                                </td>
                                <td height="22" align="left" valign="middle" class="bold">
                                    @Html.TextBoxFor(model => model.Caption, new { @class = "inputboxbig" })
                                    @Html.ValidationMessageFor(model => model.Caption)
                                </td>
                            </tr>
                            <tr>
                                <td height="22" align="right" valign="middle" class="bold">
                                    @Html.LabelFor(model => model.slug):<span class="redfont"> *</span>
                                </td>
                                <td height="22" align="left" valign="middle" class="bold">
                                    @Html.TextBoxFor(model => model.slug, new { @class = "inputboxbig" })
                                    @Html.ValidationMessageFor(model => model.slug)
                                </td>
                            </tr>
                            <tr>
                                <td height="22" align="right" valign="middle" class="bold">
                                    @Html.LabelFor(model => model.URLTargetID):
                                </td>
                                <td height="22" align="left" valign="middle" class="bold">
                                    @Html.DropDownListFor(model => model.URLTargetID, Enum.GetValues(typeof(URLTarget)).Cast<URLTarget>().Select(x => new SelectListItem { Text = x.ToString(), Value = ((int)x).ToString() }), new { @class = "listmenusmall" })
                                </td>
                            </tr>
                            <tr>
                                <td height="22" align="right" valign="middle" class="bold">
                                    @*@Html.LabelFor(model => model.PageStatusID)*@
                                    @WBSSLStore.Resources.GeneralMessage.Message.Page_Status_Caption :
                                </td>
                                <td height="22" align="left" valign="middle" class="bold">
                                    @*@Html.CheckBoxFor(model => model.PageStatusID, new { @checked = "checked" })*@
                                    @Html.DropDownList("ddlPageStatus", Enum.GetValues(typeof(WBSSLStore.Domain.PageStatus)).Cast<WBSSLStore.Domain.PageStatus>().Select(x => new SelectListItem { Text = x.GetEnumDescription(), Value = ((int)x).ToString(), Selected = (Model != null && (((int)x) == Model.PageStatusID)) }), new { @class = "listmenuauto", @onchange = "ChangeVisibility('" + (Model != null ? Model.ID : 0) + "',this);" })
                                </td>
                            </tr>
                            <tr>
                                <td align="right" valign="middle" class="bold">
                                    @Html.LabelFor(model => model.StartDate):
                                </td>
                                <td align="left" valign="top">
                                    <table width="50%" border="0" align="left" cellpadding="0" cellspacing="0">
                                        <tr>
                                            <td width="36%" align="left" valign="middle">
                                                @Html.TextBoxFor(model => model.StartDate, new { @class = "inputboxmini", @readonly = "readonly" })
                                            </td>
                                            <td width="17%" align="left" valign="middle" class="bold">
                                                @Html.LabelFor(model => model.EndDate):
                                            </td>
                                            <td width="47%" align="left" valign="middle">
                                                @Html.TextBoxFor(model => model.EndDate, new { @class = "inputboxmini", @readonly = "readonly" })
                                            </td>
                                        </tr>
                                    </table>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @if (Model != null && Model.ID > 0)
                                    {
                                        @Html.HiddenFor(model => model.BrandID)
                                        @Html.HiddenFor(model => model.DisplayOrder)
                                    }
                                </td>
                                <td height="22" align="left" valign="middle" class="bold">
                                    <input type="submit" name="btnSubmit" id="btnSubmit" value="@WBSSLStore.Resources.GeneralMessage.Message.SAVE_btn" class="bluebtn" />
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>
        </td>
    </tr>
}
@{
    setting = null;
}
